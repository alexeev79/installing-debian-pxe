#### Contents of the preconfiguration file (for bullseye)
d-i debian-installer/language string en
d-i debian-installer/country string RU
d-i debian-installer/locale string en_GB.UTF-8
d-i localechooser/supported-locales multiselect en_US.UTF-8, ru_RU.UTF-8
d-i keyboard-configuration/xkb-keymap select us
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string echonew
d-i netcfg/wireless_wep string
d-i hw-detect/load_firmware boolean true

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string mirror.yandex.ru
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string http://10.0.0.1/

### Account setup
d-i passwd/root-login boolean false
d-i passwd/make-user boolean true
d-i passwd/user-fullname string Ansible user
d-i passwd/username string ansible
d-i passwd/user-password-crypted password ################### Enter HASH ###################
d-i passwd/user-uid string 1000
d-i clock-setup/utc boolean true
d-i time/zone string Europe/Moscow
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string 10.0.0.10

#### Partitioning
d-i partman/early_command string                                         \
NUMBDEV=$(list-devices disk | wc -l);                                    \
N=10;                                                                    \
SLIMIT=500;                                                              \
FOUND=0;                                                                 \
COUNT=0;                                                                 \
K=0;                                                                     \
while [ "$COUNT" -ne "$NUMBDEV" ]; do                                    \
COUNT=$((COUNT+1));                                                      \
if [ $COUNT -eq 1 ]; then                                                \
DEVICE=$(list-devices disk|sort -k2n|head -n1);                          \
else DEVICE=$(list-devices disk|head -n$COUNT|tail -1);fi;               \
DEVSIZE=$(fdisk -l|grep -o "$DEVICE: [0-9.]* GiB"|grep -o "[0-9.]*");    \
INT=${DEVSIZE%.*};                                                       \
if [ $INT -lt $SLIMIT ]; then                                            \
if [ $FOUND -eq 0 ]; then FOUND=1; DISKA=${DEVICE};                      \
elif [ $FOUND -eq 1 ]; then FOUND=2; DISKB=${DEVICE};fi;                 \
fi;                                                                      \
done;                                                                    \
if [ "$DISKA" -ne "$DISKB" ]; then                                       \
echo ${DISKA} >> a.txt;                                                  \
echo ${DISKB} >> b.txt;                                                  \
fi;                                                                      \
debconf-set partman-auto/disk "$DISKA $DISKB";                           \
debconf-set partman-auto/method "raid";                                  \
debconf-set partman-auto-raid/recipe                                     \
   "1 2 0 fat32 /boot/efi ${DISKA}1#${DISKB}1 .                          \
    1 2 0 ext4 /boot ${DISKA}2#${DISKB}2 .                               \
    1 2 0 lvm - ${DISKA}3#${DISKB}3 .";                                  \
debconf-set partman-auto/expert_recipe "multiraid ::                     \
    100      10   100  raid \$primary{ } \$lvmignore{ } method{ raid } . \
    512      20   512  raid \$primary{ } \$lvmignore{ } method{ raid } . \
    900      25    -1  raid \$primary{ } \$lvmignore{ } method{ raid } . \
    30000    50    -1 btrfs \$defaultignore{ } \$lvmok{ } lv_name{ root } method{ format } format{ }  use_filesystem{ }  filesystem{ btrfs }  mountpoint{ / } .   \
    50000    50    -1  ext4 \$defaultignore{ } \$lvmok{ } lv_name{ home } method{ format } format{ }  use_filesystem{ }  filesystem{ ext4 }  mountpoint{ /home } .\
    10000    50    -1  ext4 \$defaultignore{ } \$lvmok{ } lv_name{ tmp }  method{ format } format{ }  use_filesystem{ }  filesystem{ ext4 }  mountpoint{ /tmp } . \
    100000   50    -1  ext4 \$defaultignore{ } \$lvmok{ } lv_name{ var }  method{ format } format{ }  use_filesystem{ }  filesystem{ xfs }  mountpoint{ /var } .";\
. /usr/share/debconf/confmodule;                                                                                                                                  \
db_set grub-pc/install_devices multiselect $(list-devices disk | tr -s '\r\n' ' ' | sed 's/\(\w\) /\1, /g' | sed 's/,\([^,]*\)$/ \1/');                           \
. /usr/share/debconf/confmodule;                                                                                                                                  \
db_set grub-installer/bootdev $(list-devices disk | tr -s '\r\n' ' ');                                                                                            \
. /usr/share/debconf/confmodule;                                                                                                                                  \
db_fset grub-installer/bootdev seen true;

d-i mdadm/boot_degraded boolean true
d-i partman/mount_style select label
d-i partman-basicfilesystems/no_swap boolean false
d-i partman-auto-lvm/no_boot boolean true
d-i partman-auto-lvm/new_vg_name string sys
d-i partman-auto-lvm/guided_size string max
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/device_remove_lvm_span boolean true
d-i partman-auto/purge_lvm_from_device boolean true
d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/choose_partition select finish
d-i partman-partitioning/confirm_write_new_label boolean true
d-i debconf/priority string critical

### Apt setup
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true

### Package selection
tasksel tasksel/first multiselect
tasksel/skip-tasks multiselect server

# Individual additional packages to install
d-i pkgsel/include string openssh-server build-essential openssh-server python-apt

### Boot loader installation
d-i grub-installer/only_debian boolean true
d-i lilo-installer/skip boolean false
d-i grub-installer/with_other_os boolean false
d-i finish-install/keep-consoles boolean false
d-i grub-pc grub-pc/install_devices_disks_changed multiselect
popularity-contest popularity-contest/participate boolean false
### Finishing up the installation
d-i finish-install/reboot_in_progress note

#### Advanced options
d-i preseed/late_command string apt-install zsh;                                   \
    in-target /bin/sh -c "echo 'dummy' >> /etc/modules";                           \
    in-target mkdir -p /home/user/.ssh;                                            \
    in-target /bin/sh -c "echo 'ssh-rsa ###############Enter HASH#####################' >> /home/user/.ssh/authorized_keys"; \
    in-target /bin/sh -c "echo 'user ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers";    \
    in-target chown -R t:t /home/user;                                             \
    in-target chmod -R 600 /home/user/authorized_keys;                             \
    in-target sh -c 'eject || true';
d-i debian-installer/splash boolean false
d-i cdrom-detect/eject boolean true

### Shutdown machine
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false
